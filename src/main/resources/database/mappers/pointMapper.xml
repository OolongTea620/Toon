<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <mapper namespace="com.to.t1.point.PointMapper">
    
	<!-- 내 포인트 조회 -->
	<select id="selectMyPoint" parameterType="MemberVO" resultType="MemberVO">
		SELECT * FROM user03.member WHERE username= #{username}
	</select>
	<!-- 포인트 충전, 사용 -->
	<update id="setMyPointcount" parameterType="PointVO">
		UPDATE user03.member SET point = (member.point + #{point}) 
		WHERE username =#{username}
	</update>
	<!-- 포인트 내역 작성 -->
	<insert id="setMyPointList" parameterType="PointVO">
		INSERT INTO user03.point(username, point, cDate, contents) 
		VALUES (#{username}, #{point}, NOW(),#{contents})
	</insert>
	
	<!-- 성현 수정 포인트 충전 내역 조회 -->
	<select id="getMyChargePointList" parameterType="java.util.Map" resultMap="pointResult">
		SELECT * FROM user03.point 
		WHERE point.username = #{memberVO.username} 
		AND point.point <![CDATA[>]]> 0
		limit #{pager.startRow}, #{pager.perPage}
	</select>
	
	<select id="getTotalCount1" parameterType="java.util.Map" resultType="java.lang.Long">
		SELECT count(*)
		FROM user03.point 
		WHERE point.username = #{memberVO.username} 
		AND point.point <![CDATA[>]]> 0 
	</select>
	
	<!-- 성현 수정 포인트 사용 내역 조회 -->
	<select id="getMyUsePointList" parameterType="java.util.Map" resultMap="pointResult">
		SELECT p.username ,ABS(p.point) AS `point`, p. cDate , p.`contents` 
		FROM USER03.`point` AS p 
		WHERE username = #{memberVO.username} 
		AND point <![CDATA[<]]>  0 ORDER BY cDate DESC
		limit #{pager.startRow}, #{pager.perPage} 
	</select>

	<select id="getTotalCount2" parameterType="java.util.Map" resultType="java.lang.Long">
		SELECT count(*)
		FROM USER03.`point` AS p 
		WHERE username = #{memberVO.username} 
		AND point <![CDATA[<]]>  0 ORDER BY cDate DESC 
	</select>
	
	<!-- 조회(List) : 어떤 유저가 구입한 웹툰관련 이력을 최근 사용순으로 조회하기  -->
	<select id="getToonTicktList"  parameterType="java.util.Map" resultMap="pointResult">
		SELECT * FROM USER03.point  
		WHERE username=#{memberVO.username} AND point <![CDATA[<]]> 0 
		ORDER BY cDate DESC 
		limit #{pager.startRow}, #{pager.perPage}
	</select>
	<!-- 소장권 구매 : n개로 산 것-->

	<select id="getTotalCount3" parameterType="java.util.Map" resultType="java.lang.Long">
		SELECT count(*)
		FROM USER03.point  
		WHERE username=#{memberVO.username} ORDER BY cDate DESC 
	</select>

	<!-- 3. 사용 내역 조회하기  -->
	<select id="getUseTicktList" parameterType="java.util.Map" resultMap="pointResult">
		SELECT * FROM USER03.useticket WHERE username= #{username} 
		limit #{pager.startRow}, #{pager.perPage}
	</select>
	
	<select id="getTotalCount4" parameterType="java.util.Map" resultType="java.lang.Long">
		SELECT count(*)
		FROM USER03.useticket WHERE username= #{username}
	</select>

	<resultMap type="PointVO" id="pointResult">
		
		<result property="username" column="username" />
		<result property="point" column="point"/>
		<result property="cDate" column="cDate"/>
		<result property="contents" column="contents"/>
		
		
		<association property="memberVO" javaType="MemberVO" resultMap="memberResult"></association> 
		<association property="useTicketVO" javaType="UseTicketVO" resultMap="useTicketResult"></association> 
	</resultMap>
	
		<resultMap type="MemberVO" id="memberResult">
			<id property="username" column="username" />
			<result property="nickname" column="nickname"/>
			<result property="password" column="password"/>
			<result property="name" column="name"/>
			<result property="phone" column="phone"/>
			<result property="email" column="email"/>
			<result property="point" column="point"/>
		</resultMap>
		
		<resultMap type="UseTicketVO" id="useTicketResult">
			<id property="toonNum" column="toonNum" />
			<id property="username" column="username"/>
			<id property="epNum" column="epNum"/>
			
			<result property="username" column="username"/>
			<result property="epNum" column="epNum"/>
			<result property="sort" column="sort"/>
			<result property="epPrice" column="epPrice"/>
			<result property="utDate" column="utDate"/>
			
		</resultMap>
	
<!-- 포인트로 소장권  구매 (member02의 경우) -->
	<!--  1 .이미 구매한 항목인지 확인: 알아서 걸러 -->	
	<select id="checkTicketBox" parameterType="TicketBoxVO" resultType="Long">
		SELECT COUNT(*) FROM ticketbox WHERE( toonNum = #{toonNum} AND username= #{username} )
	</select>
	<!--  2.재고 사항 확인하기  -->
	<select id="checkTicketStock" parameterType="TicketBoxVO" resultType="TicketBoxVO">
		SELECT * FROM ticketbox 
		WHERE sort= #{sort} AND (toonNum = #{toonNum} AND username= #{username})
	</select>
	<!--  2. 소장권  UPDATE 하거나 INSERT 하기  -->
	<update id="updateTicketStock" parameterType="TicketBoxVO">
		UPDATE user03.ticketbox SET stock =(stock+ #{stock}) 
		WHERE  username= #{username} AND (toonNum= #{toonNum} AND sort=#{sort})
	</update> 
	<!--  INSERT -->
	<insert id="insertTicketStock" parameterType="TicketBoxVO">
		INSERT INTO user03.ticketbox (username, toonNum, stock,sort) VALUES (#{username}, #{toonNum}, #{stock},#{sort})
	</insert>
	
	
<!-- 소장권 사용하기 -->
	
	<!-- 1. 소장권 INSERT 하기  -->	
	<insert id="setTicketUselist" parameterType="UseTicketVO">
		INSERT INTO user03.useticket (username, epNum,sort,toonNum,utDate) VALUES (#{username}, #{epNum},#{sort}, #{toonNum},NOW())
	</insert>
	<update id="setTicketCount" parameterType="java.util.Map">
		UPDATE ticketbox SET stock = (ticketbox.stock- 1) WHERE  username='member02' AND `toonNum`=1
	</update>
	<!-- 조회(Long)  : 어떤 유저가 가진 어떤 웹툰의 총 소장권 갯수 -->
	<select id="getTotalTicketCount" parameterType="UseTicketVO" resultType="Long">
		SELECT COUNT(*) FROM useticket  WHERE (username=#{username} AND toonNum = #{toonNum} )AND sort = 1
	</select>
<<<<<<< HEAD
	
	<!--  Eachep와 useTicket Select가져오기 -->
	<!--  -->
	<!--여기에 마구잡이로 주석은 단다 이거야 -->
=======
	<!-- 조회(long) : 어떤 유저가 가진 어떤 ep의 소장여부 -->
	<select id="checkEpGet" parameterType="java.util.Map" resultType="Long">
		SELECT COUNT(*) FROM useticket WHERE username = #{username} AND epNum = #{epNum}
	</select>
	<select id="SelectEachEpNum" parameterType="java.util.Map" resultType="Long">
		SELECT eachep.eachEpNum FROM eachep WHERE epNum = #{epNum} 
	</select>
<!-- UseTicket 조회하기 -->
	<resultMap type="UseTicketVO" id="UseTWEpNToon">
		<result property="utDate" column="utDate"/>
		<association property="toonVO" javaType="ToonVO">
			<id property="toonNum" column="toonNum"/>
			<result property="toonTitle" column="toonTitle"/>
			<result property="titleImg" column="titleImg"/>
		</association>
		<association property="eachEpVO" javaType="EachEpVO">
			<id property="eachEpNum" column="eachEpNum"/>
			<result property="epTitle" column="epTitle"/>
		</association>
	</resultMap>
	<!-- 페이징 처리용 id는 getTotalCount4 , useTicketList 작성하기-->
	<select id="getTicketUseList" parameterType="java.util.Map" resultMap="UseTWEpNToon">
		SELECT ut.utDate,ep.epTitle,ep.eachEpNum,tt.titleImg,tt.toonTitle,tt.toonNum 
		FROM useticket AS ut,eachep AS ep ,toon AS tt 
		WHERE ep.epNum = ut.epNum AND tt.toonNum = ut.toonNum 
		AND ut.username =#{memberVO.username} 
		ORDER BY ut.utDate DESC 
		limit #{pager.startRow}, #{pager.perPage} 
	</select>
	
>>>>>>> parent of dbc3548 (Revert "Merge branch 'hyelin_8' into main4")
   </mapper>