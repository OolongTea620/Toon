
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.to.t1.toon.eachep.EachEpMapper">
	
	<resultMap type="ToonVO" id="getEachEp">
		<id property="toonNum" column="toonNum"/>
    	<result property="toonTitle" column="toonTitle"/>
    	<result property="genre" column="genre"/>
      	<result property="writerID" column="writerID"/>      
     	<result property="toonSum" column="toonSum"/>
   	   	<result property="totalHit" column="totalHit"/>
   	   	<result property="toonDay" column="toonDay"/>
     	<result property="state" column="state"/>
     	<result property="titleImg" column="titleImg"/>
      	<result property="ratingSum" column="ratingSum"/>
      	<result property="ratingPerson" column="ratingPerson"/>
      	<result property="nickname" column="nickname"/>
      	
      	<association property="UseTicketVO" javaType="UseTicketVO" resultMap="EpListwithUT"></association>
      	
      	<collection property="eachEpVO" javaType="java.util.List" ofType="EachEpVO">
      		<id column="t" property="a"/>
      		<result property="epNum" column="epNum"/>
      		<result property="eachEpNum" column="eachEpNum"/>
      		<result property="epSumImg" column="epSumImg"/>
      		<result property="epTitle" column="epTitle"/>
      		<result property="epDate" column="epDate"/>
      		<result property="epContentImg" column="epContentImg"/>
      		<result property="epHit" column="epHit"/>
      		<result property="epRatingSum" column="epRatingSum"/>
      		<result property="epRatingPerson" column="epRatingPerson"/>
      	</collection>
	</resultMap>
	<!-- UseTicket 같이 더하기 -->
	<resultMap type="UseTicketVO" id="EpListwithUT">
		<result property="sort" column="sort"/>
	</resultMap>
	<!-- useTicket인경우 조회하기 -->
		<!-- 검색하기 움직임  -->
	<select id="getEplistwithUT" parameterType="UseTicketVO" resultMap="getEachEp">
		SELECT ep.* ,IFNULL(ut.sort,0) AS sort 
		FROM eachep as ep LEFT OUTER JOIN ( 
			SELECT * FROM useticket 
			WHERE (username = #{username} AND toonNum =#{toonNum}) AND sort = 1) as ut 
		on (ep.toonNum = ut.toonNum AND ep.epNum = ut.epNum) 
		WHERE ep.toonNum = #{toonNum} ORDER BY ep.eachEpNum
	</select>
	
	<select id="getList" parameterType="Pager" resultMap="getEachEp">
		SELECT * FROM toon t LEFT JOIN member m 
		ON t.writerId = m.username
		JOIN eachep e ON t.toonNum = e.toonNum
		WHERE e.toonNum=#{toonNum} ORDER BY e.eachEpNum DESC
		LIMIT #{startRow},#{perPage}
	</select>
	
	<select id="getTotalCount" parameterType="Pager" resultType="Long">
		SELECT COUNT(eachEpNum) FROM eachEp WHERE toonNum=#{toonNum}
	</select>

	<select id="getSelect" parameterType="ToonVO" resultMap="getEachEp">
		SELECT * FROM toon t LEFT JOIN member m 
		ON t.writerId = m.username
		JOIN eachep e ON t.toonNum = e.toonNum
		WHERE e.toonNum=#{toonNum} AND e.eachEpNum=#{eachEpNum}		
	</select>
	
	<update id="setHitUpdate" parameterType="EachEpVO">
		update eachEp set epHit=epHit+1 where toonNum=#{toonNum} AND epNum=#{epNum}
	</update>
	
	<update id="updateScore" parameterType="ReviewVO">
		update eachep e left JOIN review r 
		ON e.toonNum=r.toonNum AND e.epNum=r.epNum
		SET e.epRatingSum=e.epRatingSum+r.rating, e.epRatingPerson=e.epRatingPerson+1
		WHERE e.toonNum=#{toonNum} AND e.eachEpNum=#{eachEpNum}
	</update>
	
	<update id="deleteScore" parameterType="ReviewVO">
		update eachep e left JOIN review r 
		ON e.toonNum=r.toonNum AND e.epNum=r.epNum
		SET e.epRatingSum=e.epRatingSum-r.rating, e.epRatingPerson=e.epRatingPerson-1
		WHERE e.toonNum=#{toonNum} AND e.eachEpNum=#{eachEpNum}
	</update>
	
</mapper>